High Availability and Scalability Concepts
Scalability
Scalability refers to an application or system's ability to handle greater loads by adapting. There are two types of scalability:

Vertical Scalability

Involves increasing the size of an instance.
Common for non-distributed systems like databases.
Examples: Amazon RDS, Elastic Cache.
Horizontal Scalability

Involves increasing the number of instances/systems for an application.
Common for web and modern applications.
High Availability
High Availability (HA) ensures an application/system's continuous operation. It is often linked with horizontal scalability and involves running an application in at least two data centers. The goal is to survive data center loss.

HA can be passive (e.g., RDS Multi-AZ) or active (e.g., horizontal scaling).

High Availability & Scalability for EC2
Vertical Scalability:
Increase instance size (scale up and down).
Horizontal Scaling:
Increase the number of instances (scale out / in).
Components: Auto Scaling Group, Load Balancer.
Load Balancing:
Servers that forward traffic to multiple downstream instances (e.g., EC2).
Benefits: Spread load, single point of access (DNS), handle failures, health checks, SSL termination, stickiness, high availability across zones.
Why Use Elastic Load Balancing?
Managed load balancer by AWS.
AWS guarantees availability, handles upgrades/maintenance, and provides configurations.
Less effort compared to setting up your own load balancer.
Health Checks
Crucial for Load Balancers.
Allows load balancers to know if instances are available.
Health check is done on a port and a route (e.g., /health).
Unhealthy response (not 200 OK) indicates instance issues.
Types of Load Balancers on AWS
Classic Load Balancer (V1): Old version.
Application Load Balancer (V2, 2016): Supports HTTP, HTTPS, WebSocket.
Network Load Balancer (V2): Supports TCP, TLS, UDP.
Gateway Load Balancer (2020): Operates at layer 3 (IP Protocol).
Recommendation: Use newer generation load balancers for enhanced features
